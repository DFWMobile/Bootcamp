<views:MvxStorePage
    x:Class="DFWMobile.Bootcamp.Store.Views.GeoGroupDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DFWMobile.Bootcamp.Store.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:Cirrious.MvvmCross.WindowsStore.Views"
    xmlns:sampleData="using:DFWMobile.Bootcamp.Common.SampleData"
    xmlns:common="using:DFWMobile.Bootcamp.Store.Common"
    xmlns:maps="using:Bing.Maps"
    mc:Ignorable="d">
    
    <views:MvxStorePage.Resources>
        <CollectionViewSource x:Name="groupViewSource"
                                Source="{Binding SelectedGroup}"
                                d:Source="{Binding SelectedGroup, Source={d:DesignInstance IsDesignTimeCreatable=True, Type=sampleData:SelectedItemSampleData}}"
                                IsSourceGrouped="True"
                                />
    </views:MvxStorePage.Resources>

    <Grid Background="Black">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Horizontal scrolling grid -->

        <GridView
			    ScrollViewer.IsHorizontalScrollChainingEnabled="False"
                x:Name="ZoomedInItemGridView"
			    AutomationProperties.AutomationId="ZoomedInItemGridView"
			    AutomationProperties.Name="Grouped Items"
			    Grid.RowSpan="2"
			    Padding="116,137,40,46"
			    ItemsSource="{Binding Source={StaticResource groupViewSource}}"
			    SelectionMode="None"
			    IsSwipeEnabled="false" IsItemClickEnabled="True"          
                common:ItemClickCommand.Command="{Binding GoToItemCommand}" >
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.Header>
                <StackPanel Width="480" Margin="0,4,14,0"  d:DataContext="{Binding SelectedItem, Source={d:DesignInstance IsDesignTimeCreatable=True, Type=sampleData:SelectedItemSampleData}}">
                    <TextBlock Text="{Binding Title}" Margin="0,0,0,20" Style="{StaticResource SubheaderTextBlockStyle}" MaxHeight="60"/>


                    <common:BindableMap x:Name="MapControl" Credentials="AjKsZydKJ4xJk8RA67MUO6SArS6aeYO80UyEXsA6AiAFPN8YZiCRjozBOeYkhkJX" 
                          DataTemplateSelector="{StaticResource ItemTemplateSelector}" ItemsSource="{Binding Items}" Height="400"/>
                    <TextBlock Text="{Binding Description}" Margin="0,0,0,0" Style="{StaticResource BodyTextBlockStyle}"/>

                </StackPanel>
            </GridView.Header>
            <GridView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="1,0,0,6">
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </GridView.GroupStyle>
            <GridView.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Left" Width="250" Height="250">
                        <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                            <Image Source="{Binding Image}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Title}"/>
                        </Border>
                        <StackPanel VerticalAlignment="Bottom">
                            <StackPanel Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}">
                                <TextBlock Text="{Binding Title}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
                                <TextBlock Text="{Binding Subtitle}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </GridView.ItemTemplate>
        </GridView>
        <ProgressRing IsActive="{Binding IsBusy}" Grid.Row="1" Foreground="Red" VerticalAlignment="Center" HorizontalAlignment="Center" Height="100" Width="100"/>

        <!-- Back button and page title -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Margin="39,59,39,0" Command="{Binding GoBackCommand}"
                        Style="{StaticResource NavigationBackButtonNormalStyle}"
                        VerticalAlignment="Top"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>
            <TextBlock x:Name="pageTitle" Text="{Binding GroupName}" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" 
                        IsHitTestVisible="false" TextWrapping="NoWrap" VerticalAlignment="Bottom" Margin="0,0,30,40"/>


        </Grid>

    </Grid>

    <Page.BottomAppBar>
        <CommandBar IsOpen="True">
            <CommandBar.PrimaryCommands>
                <AppBarButton Icon="Refresh" Label="Refresh" Command="{Binding RefreshCommand}" IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanNegationConverter}}"/>
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton Icon="Add" Label="Add" Command="{Binding AddItemCommand}" IsEnabled="{Binding IsEditable}" />
                <AppBarButton Icon="Delete" Label="Delete" Command="{Binding DeleteItemCommand}" IsEnabled="{Binding IsEditable}" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</views:MvxStorePage>
